version: '3'

vars:
  GOLANG_MIGRATE_VERSION: v4.18.2
  MIGRATE_BINARY_FILE: ./bin/migrate-{{.GOLANG_MIGRATE_VERSION}}
  MIGRATION_PATH: ./migrations
  MIGRATIONS_TO_RUN: 1

tasks:
  download:
    desc: Download the golang-migrate binary if not present
    cmds:
      - mkdir -p ./bin
      - |
        if [ ! -f {{.MIGRATE_BINARY_FILE}} ]; then
          echo "Downloading migrate binary..."
          curl -L https://github.com/golang-migrate/migrate/releases/download/{{.GOLANG_MIGRATE_VERSION}}/migrate.{{OS}}-{{ARCH}}.tar.gz | tar xvz
          mv migrate {{.MIGRATE_BINARY_FILE}}
          chmod +x {{.MIGRATE_BINARY_FILE}}
        else
          echo "Migrate binary already exists"
        fi
    sources:
      - "{{.MIGRATE_BINARY_FILE}}"
    generates:
      - "{{.MIGRATE_BINARY_FILE}}"
  
  create:
    desc: Create a new migration file with up/down SQL scripts
    requires:
      vars:
        - MIGRATION_PATH
    cmds:
      - task: download
      - "{{.MIGRATE_BINARY_FILE}} create -ext sql -dir {{.MIGRATION_PATH}} {{.CLI_ARGS}}"

  goto:
    desc: Migrate database to a specific version
    requires:
      vars:
        - MIGRATION_PATH
        - DB_URL
    cmds:
      - task: download
      - "{{.MIGRATE_BINARY_FILE}} -path {{.MIGRATION_PATH}} -database {{.DB_URL}} goto {{.CLI_ARGS}}"
  
  up:
    desc: Apply migrations to upgrade database schema
    requires:
      vars:
        - MIGRATION_PATH
        - DB_URL
        - MIGRATIONS_TO_RUN
    cmds:
      - task: download
      - "{{.MIGRATE_BINARY_FILE}} -path {{.MIGRATION_PATH}} -database {{.DB_URL}} up {{.MIGRATIONS_TO_RUN}}"

  down:
    desc: Roll back migrations to downgrade database schema
    requires:
      vars:
        - MIGRATION_PATH
        - DB_URL
        - MIGRATIONS_TO_RUN
    cmds:
      - task: download
      - "{{.MIGRATE_BINARY_FILE}} -path {{.MIGRATION_PATH}} -database {{.DB_URL}} down {{.MIGRATIONS_TO_RUN}}"

  drop:
    desc: Drop all objects in the database (tables, indexes, etc.)
    requires:
      vars:
        - MIGRATION_PATH
        - DB_URL
    cmds:
      - task: download
      - "{{.MIGRATE_BINARY_FILE}} -path {{.MIGRATION_PATH}} -database {{.DB_URL}} drop"

  force:
    desc: Set migration version without running migrations (for fixing broken states)
    requires:
      vars:
        - MIGRATION_PATH
        - DB_URL
    cmds:
      - task: download
      - "{{.MIGRATE_BINARY_FILE}} -path {{.MIGRATION_PATH}} -database {{.DB_URL}} force {{.CLI_ARGS}}"

  version:
    desc: Show current migration version of the database
    requires:
      vars:
        - MIGRATION_PATH
        - DB_URL
    cmds:
      - task: download
      - "{{.MIGRATE_BINARY_FILE}} -path {{.MIGRATION_PATH}} -database {{.DB_URL}} version"
